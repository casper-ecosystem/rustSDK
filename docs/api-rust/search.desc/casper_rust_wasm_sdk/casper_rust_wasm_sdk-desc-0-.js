searchState.loadedDescShard("casper_rust_wasm_sdk", 0, "Calls a smart contract entry point with the specified …\nPerform a deploy operation.\nReturns the argument unchanged.\nRetrieves account information based on the provided …\nRetrieves auction information based on the provided …\nRetrieves balance information based on the provided …\nRetrieves block information using the provided options.\nRetrieves block transfers information based on the …\nAsynchronously retrieves the chainspec.\nRetrieves deploy information based on the provided options.\nRetrieves dictionary item information based on the …\nRetrieves era summary information based on the provided …\nRetrieves node status information based on the provided …\nRetrieves peers.\nRetrieves state root hash information based on the …\nRetrieves validator changes based on the provided options.\nInstalls a smart contract with the specified parameters …\nCalls <code>U::from(self)</code>.\nLists available RPCs based on the provided options.\nCreates a deploy using the provided parameters.\nCreates a transfer deploy with the provided parameters.\nPuts a deploy based on the provided options.\nRetrieves balance information based on the provided …\nQuery a contract dictionary item.\nQuery a contract key.\nRetrieves global state information based on the provided …\nBuilds parameters for querying global state based on the …\nSigns a deploy using the provided secret key.\nThis function allows executing a deploy speculatively.\nPerform speculative execution.\nPerform a speculative transfer.\nPerform a transfer of funds.\nWaits for a deploy event to be processed asynchronously.\nCreates a new DeployWatcher instance to watch deploys.\nRepresents the body of an event, containing processed …\nRepresents processed deploy information.\nRepresents a subscription to deploy events for non-wasm32 …\nRepresents a deploy watcher responsible for monitoring …\nA wrapper for an event handler function, providing …\nRepresents the result of parsing an event, containing …\nRepresents the result of an execution, either Success or …\nRepresents a failure response containing an error message.\nRepresents a success response containing a cost value.\nCalls the stored event handling function with the provided …\nImplements the <code>Clone</code> trait for creating a cloned instance …\nImplements the <code>Default</code> trait, creating a default instance …\nDeploy hash to identify the subscription.\nHandler function for deploy events.\nResult of the execution, either Success or Failure.\nOptional Failure information.\nImplements the <code>Debug</code> trait for better debugging support.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>EventHandlerFn</code> with the specified event …\nCreates a new <code>DeployWatcher</code> instance.\nConstructor for DeploySubscription for non-wasm32 target …\nAsynchronously starts watching for deploy events and …\nStops watching for deploy events.\nSubscribes to deploy events.\nOptional Success information.\nUnsubscribes from deploy events based on the provided …\nConverts a CLValue to a JSON Value.\nConvert a formatted account hash to a base64-encoded …\nComputes the Blake2b hash of the provided metadata.\nGets the current timestamp.\nGets the gas price or returns the default value if not …\nGets the time to live (TTL) value or returns the default …\nConverts a hexadecimal string to a regular string.\nConverts a hexadecimal string to a vector of unsigned …\nPretty prints a serializable value as a JSON string.\nCreates a dictionary item key by concatenating the …\nConverts motes to CSPR (Casper tokens).\nParses a timestamp string into a <code>Timestamp</code> object.\nParses a TTL (time to live) string into a <code>TimeDiff</code> object.\nConverts a secret key in PEM format to its corresponding …\nParses a secret key in PEM format into a <code>SecretKey</code> object.\nGenerates a secret key using the Ed25519 algorithm.\nGenerates a secret key using the secp256k1 algorithm.\nEnum representing different ways to specify the purse uref.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEnum to represent input for KeyIdentifier.\nEnum to represent input for PathIdentifier.\nOptions for the <code>query_global_state</code> method.\nStruct to store parameters for querying global state.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")