x64:
  firstOrDefaultFilePatterns:
    - '!**/node_modules'
    - '!build{,/**/*}'
    - '!release{,/**/*}'
    - index.js
    - favicon.png
    - package.json
    - '!**/*.{iml,hprof,orig,pyc,pyo,rbc,swp,csproj,sln,suo,xproj,cc,d.ts,mk,a,o,forge-meta,pdb}'
    - '!**/._*'
    - '!**/electron-builder.{yaml,yml,json,json5,toml,ts}'
    - '!**/{.git,.hg,.svn,CVS,RCS,SCCS,__pycache__,.DS_Store,thumbs.db,.gitignore,.gitkeep,.gitattributes,.npmignore,.idea,.vs,.flowconfig,.jshintrc,.eslintrc,.circleci,.yarn-integrity,.yarn-metadata.json,yarn-error.log,yarn.lock,package-lock.json,npm-debug.log,appveyor.yml,.travis.yml,circle.yml,.nyc_output,.husky,.github}'
    - '!.yarn{,/**/*}'
    - '!.editorconfig'
    - '!.yarnrc.yml'
    - - '!**/node_modules'
      - '!build{,/**/*}'
      - '!release{,/**/*}'
      - index.js
      - favicon.png
      - package.json
      - '!**/*.{iml,hprof,orig,pyc,pyo,rbc,swp,csproj,sln,suo,xproj,cc,d.ts,mk,a,o,forge-meta,pdb}'
      - '!**/._*'
      - '!**/electron-builder.{yaml,yml,json,json5,toml,ts}'
      - '!**/{.git,.hg,.svn,CVS,RCS,SCCS,__pycache__,.DS_Store,thumbs.db,.gitignore,.gitkeep,.gitattributes,.npmignore,.idea,.vs,.flowconfig,.jshintrc,.eslintrc,.circleci,.yarn-integrity,.yarn-metadata.json,yarn-error.log,yarn.lock,package-lock.json,npm-debug.log,appveyor.yml,.travis.yml,circle.yml,.nyc_output,.husky,.github}'
      - '!.yarn{,/**/*}'
      - '!.editorconfig'
      - '!.yarnrc.yml'
  nodeModuleFilePatterns:
    - '**/*'
    - index.js
    - favicon.png
    - - '**/*'
      - index.js
      - favicon.png
nsis:
<<<<<<< HEAD
<<<<<<< HEAD
  script: |-
    !include "/media/WINKING/opt2/casper/rustSDK/examples/desktop/electron/node_modules/app-builder-lib/templates/nsis/include/StdUtils.nsh"
    !addincludedir "/media/WINKING/opt2/casper/rustSDK/examples/desktop/electron/node_modules/app-builder-lib/templates/nsis/include"
    !macro _isUpdated _a _b _t _f
      ${StdUtils.TestParameter} $R9 "updated"
      StrCmp "$R9" "true" `${_t}` `${_f}`
    !macroend
    !define isUpdated `"" isUpdated ""`

    !macro _isForceRun _a _b _t _f
      ${StdUtils.TestParameter} $R9 "force-run"
      StrCmp "$R9" "true" `${_t}` `${_f}`
    !macroend
    !define isForceRun `"" isForceRun ""`

    !macro _isKeepShortcuts _a _b _t _f
      ${StdUtils.TestParameter} $R9 "keep-shortcuts"
      StrCmp "$R9" "true" `${_t}` `${_f}`
    !macroend
    !define isKeepShortcuts `"" isKeepShortcuts ""`

    !macro _isNoDesktopShortcut _a _b _t _f
      ${StdUtils.TestParameter} $R9 "no-desktop-shortcut"
      StrCmp "$R9" "true" `${_t}` `${_f}`
    !macroend
    !define isNoDesktopShortcut `"" isNoDesktopShortcut ""`

    !macro _isDeleteAppData _a _b _t _f
      ${StdUtils.TestParameter} $R9 "delete-app-data"
      StrCmp "$R9" "true" `${_t}` `${_f}`
    !macroend
    !define isDeleteAppData `"" isDeleteAppData ""`

    !macro _isForAllUsers _a _b _t _f
      ${StdUtils.TestParameter} $R9 "allusers"
      StrCmp "$R9" "true" `${_t}` `${_f}`
    !macroend
    !define isForAllUsers `"" isForAllUsers ""`

    !macro _isForCurrentUser _a _b _t _f
      ${StdUtils.TestParameter} $R9 "currentuser"
      StrCmp "$R9" "true" `${_t}` `${_f}`
    !macroend
    !define isForCurrentUser `"" isForCurrentUser ""`

    !macro addLangs
      !insertmacro MUI_LANGUAGE "English"
      !insertmacro MUI_LANGUAGE "German"
      !insertmacro MUI_LANGUAGE "French"
      !insertmacro MUI_LANGUAGE "SpanishInternational"
      !insertmacro MUI_LANGUAGE "SimpChinese"
      !insertmacro MUI_LANGUAGE "TradChinese"
      !insertmacro MUI_LANGUAGE "Japanese"
      !insertmacro MUI_LANGUAGE "Korean"
      !insertmacro MUI_LANGUAGE "Italian"
      !insertmacro MUI_LANGUAGE "Dutch"
      !insertmacro MUI_LANGUAGE "Danish"
      !insertmacro MUI_LANGUAGE "Swedish"
      !insertmacro MUI_LANGUAGE "Norwegian"
      !insertmacro MUI_LANGUAGE "Finnish"
      !insertmacro MUI_LANGUAGE "Russian"
      !insertmacro MUI_LANGUAGE "Portuguese"
      !insertmacro MUI_LANGUAGE "PortugueseBR"
      !insertmacro MUI_LANGUAGE "Polish"
      !insertmacro MUI_LANGUAGE "Ukrainian"
      !insertmacro MUI_LANGUAGE "Czech"
      !insertmacro MUI_LANGUAGE "Slovak"
      !insertmacro MUI_LANGUAGE "Hungarian"
      !insertmacro MUI_LANGUAGE "Arabic"
      !insertmacro MUI_LANGUAGE "Turkish"
      !insertmacro MUI_LANGUAGE "Thai"
      !insertmacro MUI_LANGUAGE "Vietnamese"
    !macroend

    !addplugindir /x86-unicode "/home/greg/.cache/electron-builder/nsis/nsis-resources-3.4.1/plugins/x86-unicode"
    !include "/tmp/t-mqLr89/0-messages.nsh"

    Var newStartMenuLink
    Var oldStartMenuLink
    Var newDesktopLink
    Var oldDesktopLink
    Var oldShortcutName
    Var oldMenuDirectory

    !include "common.nsh"
    !include "MUI2.nsh"
    !include "multiUser.nsh"
    !include "allowOnlyOneInstallerInstance.nsh"

    !ifdef INSTALL_MODE_PER_ALL_USERS
      !ifdef BUILD_UNINSTALLER
        RequestExecutionLevel user
      !else
        RequestExecutionLevel admin
      !endif
    !else
      RequestExecutionLevel user
    !endif

    !ifdef BUILD_UNINSTALLER
      SilentInstall silent
    !else
      Var appExe
      Var launchLink
    !endif

    !ifdef ONE_CLICK
      !include "oneClick.nsh"
    !else
      !include "assistedInstaller.nsh"
    !endif

    !insertmacro addLangs

    !ifmacrodef customHeader
      !insertmacro customHeader
    !endif

    Function .onInit
      Call setInstallSectionSpaceRequired

      SetOutPath $INSTDIR
      ${LogSet} on

      !ifmacrodef preInit
        !insertmacro preInit
      !endif

      !ifdef DISPLAY_LANG_SELECTOR
        !insertmacro MUI_LANGDLL_DISPLAY
      !endif

      !ifdef BUILD_UNINSTALLER
        WriteUninstaller "${UNINSTALLER_OUT_FILE}"
        !insertmacro quitSuccess
      !else
        !insertmacro check64BitAndSetRegView

        !ifdef ONE_CLICK
          !insertmacro ALLOW_ONLY_ONE_INSTALLER_INSTANCE
        !else
          ${IfNot} ${UAC_IsInnerInstance}
            !insertmacro ALLOW_ONLY_ONE_INSTALLER_INSTANCE
          ${EndIf}
        !endif

        !insertmacro initMultiUser

        !ifmacrodef customInit
          !insertmacro customInit
        !endif

        !ifmacrodef addLicenseFiles
          InitPluginsDir
          !insertmacro addLicenseFiles
        !endif
      !endif
    FunctionEnd

    !ifndef BUILD_UNINSTALLER
      !include "installUtil.nsh"
    !endif

    Section "install" INSTALL_SECTION_ID
      !ifndef BUILD_UNINSTALLER
        # If we're running a silent upgrade of a per-machine installation, elevate so extracting the new app will succeed.
        # For a non-silent install, the elevation will be triggered when the install mode is selected in the UI,
        # but that won't be executed when silent.
        !ifndef INSTALL_MODE_PER_ALL_USERS
          !ifndef ONE_CLICK
              ${if} $hasPerMachineInstallation == "1" # set in onInit by initMultiUser
              ${andIf} ${Silent}
                ${ifNot} ${UAC_IsAdmin}
                  ShowWindow $HWNDPARENT ${SW_HIDE}
                  !insertmacro UAC_RunElevated
                  ${Switch} $0
                    ${Case} 0
                      ${Break}
                    ${Case} 1223 ;user aborted
                      ${Break}
                    ${Default}
                      MessageBox mb_IconStop|mb_TopMost|mb_SetForeground "Unable to elevate, error $0"
                      ${Break}
                  ${EndSwitch}
                  Quit
                ${else}
                  !insertmacro setInstallModePerAllUsers
                ${endIf}
              ${endIf}
          !endif
        !endif
        !include "installSection.nsh"
      !endif
    SectionEnd

    Function setInstallSectionSpaceRequired
      !insertmacro setSpaceRequired ${INSTALL_SECTION_ID}
    FunctionEnd

    !ifdef BUILD_UNINSTALLER
      !include "uninstaller.nsh"
    !endif
=======
  script: "!include \"/opt2/casper/rustSDK/examples/desktop/electron/node_modules/app-builder-lib/templates/nsis/include/StdUtils.nsh\"\n!addincludedir \"/opt2/casper/rustSDK/examples/desktop/electron/node_modules/app-builder-lib/templates/nsis/include\"\n!macro _isUpdated _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"updated\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isUpdated `\"\" isUpdated \"\"`\n\n!macro _isForceRun _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"force-run\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isForceRun `\"\" isForceRun \"\"`\n\n!macro _isKeepShortcuts _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"keep-shortcuts\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isKeepShortcuts `\"\" isKeepShortcuts \"\"`\n\n!macro _isNoDesktopShortcut _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"no-desktop-shortcut\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isNoDesktopShortcut `\"\" isNoDesktopShortcut \"\"`\n\n!macro _isDeleteAppData _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"delete-app-data\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isDeleteAppData `\"\" isDeleteAppData \"\"`\n\n!macro _isForAllUsers _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"allusers\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isForAllUsers `\"\" isForAllUsers \"\"`\n\n!macro _isForCurrentUser _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"currentuser\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isForCurrentUser `\"\" isForCurrentUser \"\"`\n\n!macro addLangs\n  !insertmacro MUI_LANGUAGE \"English\"\n  !insertmacro MUI_LANGUAGE \"German\"\n  !insertmacro MUI_LANGUAGE \"French\"\n  !insertmacro MUI_LANGUAGE \"SpanishInternational\"\n  !insertmacro MUI_LANGUAGE \"SimpChinese\"\n  !insertmacro MUI_LANGUAGE \"TradChinese\"\n  !insertmacro MUI_LANGUAGE \"Japanese\"\n  !insertmacro MUI_LANGUAGE \"Korean\"\n  !insertmacro MUI_LANGUAGE \"Italian\"\n  !insertmacro MUI_LANGUAGE \"Dutch\"\n  !insertmacro MUI_LANGUAGE \"Danish\"\n  !insertmacro MUI_LANGUAGE \"Swedish\"\n  !insertmacro MUI_LANGUAGE \"Norwegian\"\n  !insertmacro MUI_LANGUAGE \"Finnish\"\n  !insertmacro MUI_LANGUAGE \"Russian\"\n  !insertmacro MUI_LANGUAGE \"Portuguese\"\n  !insertmacro MUI_LANGUAGE \"PortugueseBR\"\n  !insertmacro MUI_LANGUAGE \"Polish\"\n  !insertmacro MUI_LANGUAGE \"Ukrainian\"\n  !insertmacro MUI_LANGUAGE \"Czech\"\n  !insertmacro MUI_LANGUAGE \"Slovak\"\n  !insertmacro MUI_LANGUAGE \"Hungarian\"\n  !insertmacro MUI_LANGUAGE \"Arabic\"\n  !insertmacro MUI_LANGUAGE \"Turkish\"\n  !insertmacro MUI_LANGUAGE \"Thai\"\n  !insertmacro MUI_LANGUAGE \"Vietnamese\"\n!macroend\n\n!addplugindir /x86-unicode \"/home/greg/.cache/electron-builder/nsis/nsis-resources-3.4.1/plugins/x86-unicode\"\n!include \"/tmp/t-9V2j1d/0-messages.nsh\"\n\n!include \"common.nsh\"\n!include \"extractAppPackage.nsh\"\n\n# https://github.com/electron-userland/electron-builder/issues/3972#issuecomment-505171582\nCRCCheck off\nWindowIcon Off\nAutoCloseWindow True\nRequestExecutionLevel ${REQUEST_EXECUTION_LEVEL}\n\nFunction .onInit\n  !ifndef SPLASH_IMAGE\n    SetSilent silent\n  !endif\n\n  !insertmacro check64BitAndSetRegView\nFunctionEnd\n\nFunction .onGUIInit\n  InitPluginsDir\n\n  !ifdef SPLASH_IMAGE\n    File /oname=$PLUGINSDIR\\splash.bmp \"${SPLASH_IMAGE}\"\n    BgImage::SetBg $PLUGINSDIR\\splash.bmp\n    BgImage::Redraw\n  !endif\nFunctionEnd\n\nSection\n  !ifdef SPLASH_IMAGE\n    HideWindow\n  !endif\n\n  StrCpy $INSTDIR \"$PLUGINSDIR\\app\"\n  !ifdef UNPACK_DIR_NAME\n    StrCpy $INSTDIR \"$TEMP\\${UNPACK_DIR_NAME}\"\n  !endif\n\n  RMDir /r $INSTDIR\n  SetOutPath $INSTDIR\n\n  !ifdef APP_DIR_64\n    !ifdef APP_DIR_ARM64\n      !ifdef APP_DIR_32\n        ${if} ${IsNativeARM64}\n          File /r \"${APP_DIR_ARM64}\\*.*\"\n        ${elseif} ${RunningX64}\n          File /r \"${APP_DIR_64}\\*.*\"\n        ${else}\n          File /r \"${APP_DIR_32}\\*.*\"\n        ${endIf}\n      !else\n        ${if} ${IsNativeARM64}\n          File /r \"${APP_DIR_ARM64}\\*.*\"\n        ${else}\n          File /r \"${APP_DIR_64}\\*.*\"\n        {endIf}\n      !endif\n    !else\n      !ifdef APP_DIR_32\n        ${if} ${RunningX64}\n          File /r \"${APP_DIR_64}\\*.*\"\n        ${else}\n          File /r \"${APP_DIR_32}\\*.*\"\n        ${endIf}\n      !else\n        File /r \"${APP_DIR_64}\\*.*\"\n      !endif\n    !endif\n  !else\n    !ifdef APP_DIR_32\n      File /r \"${APP_DIR_32}\\*.*\"\n    !else\n      !insertmacro extractEmbeddedAppPackage\n    !endif\n  !endif\n\n  System::Call 'Kernel32::SetEnvironmentVariable(t, t)i (\"PORTABLE_EXECUTABLE_DIR\", \"$EXEDIR\").r0'\n  System::Call 'Kernel32::SetEnvironmentVariable(t, t)i (\"PORTABLE_EXECUTABLE_FILE\", \"$EXEPATH\").r0'\n  System::Call 'Kernel32::SetEnvironmentVariable(t, t)i (\"PORTABLE_EXECUTABLE_APP_FILENAME\", \"${APP_FILENAME}\").r0'\n  ${StdUtils.GetAllParameters} $R0 0\n\n  !ifdef SPLASH_IMAGE\n    BgImage::Destroy\n  !endif\n\n\tExecWait \"$INSTDIR\\${APP_EXECUTABLE_FILENAME} $R0\" $0\n  SetErrorLevel $0\n\n  SetOutPath $EXEDIR\n\tRMDir /r $INSTDIR\nSectionEnd\n"
>>>>>>> 9d6a836 (Deploy watcher + Key generation (#34))
=======
  script: "!include \"/opt2/casper/rustSDK/examples/desktop/electron/node_modules/app-builder-lib/templates/nsis/include/StdUtils.nsh\"\n!addincludedir \"/opt2/casper/rustSDK/examples/desktop/electron/node_modules/app-builder-lib/templates/nsis/include\"\n!macro _isUpdated _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"updated\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isUpdated `\"\" isUpdated \"\"`\n\n!macro _isForceRun _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"force-run\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isForceRun `\"\" isForceRun \"\"`\n\n!macro _isKeepShortcuts _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"keep-shortcuts\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isKeepShortcuts `\"\" isKeepShortcuts \"\"`\n\n!macro _isNoDesktopShortcut _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"no-desktop-shortcut\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isNoDesktopShortcut `\"\" isNoDesktopShortcut \"\"`\n\n!macro _isDeleteAppData _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"delete-app-data\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isDeleteAppData `\"\" isDeleteAppData \"\"`\n\n!macro _isForAllUsers _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"allusers\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isForAllUsers `\"\" isForAllUsers \"\"`\n\n!macro _isForCurrentUser _a _b _t _f\n  ${StdUtils.TestParameter} $R9 \"currentuser\"\n  StrCmp \"$R9\" \"true\" `${_t}` `${_f}`\n!macroend\n!define isForCurrentUser `\"\" isForCurrentUser \"\"`\n\n!macro addLangs\n  !insertmacro MUI_LANGUAGE \"English\"\n  !insertmacro MUI_LANGUAGE \"German\"\n  !insertmacro MUI_LANGUAGE \"French\"\n  !insertmacro MUI_LANGUAGE \"SpanishInternational\"\n  !insertmacro MUI_LANGUAGE \"SimpChinese\"\n  !insertmacro MUI_LANGUAGE \"TradChinese\"\n  !insertmacro MUI_LANGUAGE \"Japanese\"\n  !insertmacro MUI_LANGUAGE \"Korean\"\n  !insertmacro MUI_LANGUAGE \"Italian\"\n  !insertmacro MUI_LANGUAGE \"Dutch\"\n  !insertmacro MUI_LANGUAGE \"Danish\"\n  !insertmacro MUI_LANGUAGE \"Swedish\"\n  !insertmacro MUI_LANGUAGE \"Norwegian\"\n  !insertmacro MUI_LANGUAGE \"Finnish\"\n  !insertmacro MUI_LANGUAGE \"Russian\"\n  !insertmacro MUI_LANGUAGE \"Portuguese\"\n  !insertmacro MUI_LANGUAGE \"PortugueseBR\"\n  !insertmacro MUI_LANGUAGE \"Polish\"\n  !insertmacro MUI_LANGUAGE \"Ukrainian\"\n  !insertmacro MUI_LANGUAGE \"Czech\"\n  !insertmacro MUI_LANGUAGE \"Slovak\"\n  !insertmacro MUI_LANGUAGE \"Hungarian\"\n  !insertmacro MUI_LANGUAGE \"Arabic\"\n  !insertmacro MUI_LANGUAGE \"Turkish\"\n  !insertmacro MUI_LANGUAGE \"Thai\"\n  !insertmacro MUI_LANGUAGE \"Vietnamese\"\n!macroend\n\n!addplugindir /x86-unicode \"/home/greg/.cache/electron-builder/nsis/nsis-resources-3.4.1/plugins/x86-unicode\"\n!include \"/tmp/t-iZpy35/0-messages.nsh\"\n\n!include \"common.nsh\"\n!include \"extractAppPackage.nsh\"\n\n# https://github.com/electron-userland/electron-builder/issues/3972#issuecomment-505171582\nCRCCheck off\nWindowIcon Off\nAutoCloseWindow True\nRequestExecutionLevel ${REQUEST_EXECUTION_LEVEL}\n\nFunction .onInit\n  !ifndef SPLASH_IMAGE\n    SetSilent silent\n  !endif\n\n  !insertmacro check64BitAndSetRegView\nFunctionEnd\n\nFunction .onGUIInit\n  InitPluginsDir\n\n  !ifdef SPLASH_IMAGE\n    File /oname=$PLUGINSDIR\\splash.bmp \"${SPLASH_IMAGE}\"\n    BgImage::SetBg $PLUGINSDIR\\splash.bmp\n    BgImage::Redraw\n  !endif\nFunctionEnd\n\nSection\n  !ifdef SPLASH_IMAGE\n    HideWindow\n  !endif\n\n  StrCpy $INSTDIR \"$PLUGINSDIR\\app\"\n  !ifdef UNPACK_DIR_NAME\n    StrCpy $INSTDIR \"$TEMP\\${UNPACK_DIR_NAME}\"\n  !endif\n\n  RMDir /r $INSTDIR\n  SetOutPath $INSTDIR\n\n  !ifdef APP_DIR_64\n    !ifdef APP_DIR_ARM64\n      !ifdef APP_DIR_32\n        ${if} ${IsNativeARM64}\n          File /r \"${APP_DIR_ARM64}\\*.*\"\n        ${elseif} ${RunningX64}\n          File /r \"${APP_DIR_64}\\*.*\"\n        ${else}\n          File /r \"${APP_DIR_32}\\*.*\"\n        ${endIf}\n      !else\n        ${if} ${IsNativeARM64}\n          File /r \"${APP_DIR_ARM64}\\*.*\"\n        ${else}\n          File /r \"${APP_DIR_64}\\*.*\"\n        {endIf}\n      !endif\n    !else\n      !ifdef APP_DIR_32\n        ${if} ${RunningX64}\n          File /r \"${APP_DIR_64}\\*.*\"\n        ${else}\n          File /r \"${APP_DIR_32}\\*.*\"\n        ${endIf}\n      !else\n        File /r \"${APP_DIR_64}\\*.*\"\n      !endif\n    !endif\n  !else\n    !ifdef APP_DIR_32\n      File /r \"${APP_DIR_32}\\*.*\"\n    !else\n      !insertmacro extractEmbeddedAppPackage\n    !endif\n  !endif\n\n  System::Call 'Kernel32::SetEnvironmentVariable(t, t)i (\"PORTABLE_EXECUTABLE_DIR\", \"$EXEDIR\").r0'\n  System::Call 'Kernel32::SetEnvironmentVariable(t, t)i (\"PORTABLE_EXECUTABLE_FILE\", \"$EXEPATH\").r0'\n  System::Call 'Kernel32::SetEnvironmentVariable(t, t)i (\"PORTABLE_EXECUTABLE_APP_FILENAME\", \"${APP_FILENAME}\").r0'\n  ${StdUtils.GetAllParameters} $R0 0\n\n  !ifdef SPLASH_IMAGE\n    BgImage::Destroy\n  !endif\n\n\tExecWait \"$INSTDIR\\${APP_EXECUTABLE_FILENAME} $R0\" $0\n  SetErrorLevel $0\n\n  SetOutPath $EXEDIR\n\tRMDir /r $INSTDIR\nSectionEnd\n"
>>>>>>> e374407 (CI CD + tests + remove docs (#37))
